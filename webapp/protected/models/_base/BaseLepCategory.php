<?php

/**
 * This is the model base class for the table "lep_category".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LepCategory".
 *
 * Columns in table "lep_category" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $category_id
 * @property string $parent_id
 * @property string $order_num
 * @property string $title
 * @property string $status
 * @property string $path
 * @property string $path_url
 * @property string $parents
 * @property string $description
 * @property string $meta_keyword
 * @property string $seo_title
 * @property string $has_child
 * @property integer $num_res
 * @property string $created_at
 *
 */
abstract class BaseLepCategory extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'lep_category';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'LepCategory|LepCategories', $n);
    }

    public static function representingColumn() {
        return 'status';
    }

    public function rules() {
        return array(
            array('description, meta_keyword, created_at', 'required'),
            array('num_res', 'numerical', 'integerOnly' => true),
            array('parent_id, order_num, created_at', 'length', 'max' => 10),
            array('title, path, path_url, parents, seo_title', 'length', 'max' => 255),
            array('status, has_child', 'length', 'max' => 1),
            array('parent_id, order_num, title, status, path, path_url, parents, seo_title, has_child, num_res', 'default', 'setOnEmpty' => true, 'value' => null),
            array('category_id, parent_id, order_num, title, status, path, path_url, parents, description, meta_keyword, seo_title, has_child, num_res, created_at', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'category_id' => Yii::t('app', 'Category'),
            'parent_id' => Yii::t('app', 'Parent'),
            'order_num' => Yii::t('app', 'Order Num'),
            'title' => Yii::t('app', 'Title'),
            'status' => Yii::t('app', 'Status'),
            'path' => Yii::t('app', 'Path'),
            'path_url' => Yii::t('app', 'Path Url'),
            'parents' => Yii::t('app', 'Parents'),
            'description' => Yii::t('app', 'Description'),
            'meta_keyword' => Yii::t('app', 'Meta Keyword'),
            'seo_title' => Yii::t('app', 'Seo Title'),
            'has_child' => Yii::t('app', 'Has Child'),
            'num_res' => Yii::t('app', 'Num Res'),
            'created_at' => Yii::t('app', 'Created At'),
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('category_id', $this->category_id, true);
        $criteria->compare('parent_id', $this->parent_id, true);
        $criteria->compare('order_num', $this->order_num, true);
        $criteria->compare('title', $this->title, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('path', $this->path, true);
        $criteria->compare('path_url', $this->path_url, true);
        $criteria->compare('parents', $this->parents, true);
        $criteria->compare('description', $this->description, true);
        $criteria->compare('meta_keyword', $this->meta_keyword, true);
        $criteria->compare('seo_title', $this->seo_title, true);
        $criteria->compare('has_child', $this->has_child, true);
        $criteria->compare('num_res', $this->num_res);
        $criteria->compare('created_at', $this->created_at, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function indexCategory() {
        $sql = "
            select a.category_id, a.title, count(b.title) as count from lep_category as a 
            right outer join lep_resource as b on a.category_id=b.category_id
            group by a.category_id order by a.category_id 
        ";
        $connection = Yii::app()->db;
        $command = $connection->createCommand($sql);
        $row = $command->queryAll();
        return $row;
    }

}