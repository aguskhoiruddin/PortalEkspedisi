<?php

/**
 * This is the model base class for the table "lep_prod_category".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LepProdCategory".
 *
 * Columns in table "lep_prod_category" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $category_id
 * @property integer $parent_id
 * @property string $title
 * @property string $seo_title
 * @property string $status
 * @property string $path
 * @property string $path_url
 *
 */
abstract class BaseLepProdCategory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'lep_prod_category';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'LepProdCategory|LepProdCategories', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('parent_id, title, seo_title', 'required'),
			array('parent_id', 'numerical', 'integerOnly'=>true),
			array('title, seo_title, path, path_url', 'length', 'max'=>255),
			array('status', 'length', 'max'=>1),
			array('status, path, path_url', 'default', 'setOnEmpty' => true, 'value' => null),
			array('category_id, parent_id, title, seo_title, status, path, path_url', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'category_id' => Yii::t('app', 'Category'),
			'parent_id' => Yii::t('app', 'Parent'),
			'title' => Yii::t('app', 'Title'),
			'seo_title' => Yii::t('app', 'Seo Title'),
			'status' => Yii::t('app', 'Status'),
			'path' => Yii::t('app', 'Path'),
			'path_url' => Yii::t('app', 'Path Url'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('category_id', $this->category_id, true);
		$criteria->compare('parent_id', $this->parent_id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('seo_title', $this->seo_title, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('path', $this->path, true);
		$criteria->compare('path_url', $this->path_url, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}